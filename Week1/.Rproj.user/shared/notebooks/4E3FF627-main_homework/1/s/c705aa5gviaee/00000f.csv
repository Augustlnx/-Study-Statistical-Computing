"0","# 自定义云雨图函数"
"0","""%||%"" <- function(a, b) {"
"0","  if (!is.null(a)) a else b"
"0","}"
"0"," "
"0"," "
"0","geom_flat_violin <- function(mapping = NULL, data = NULL, stat = ""ydensity"","
"0","                             position = ""dodge"", trim = TRUE, scale = ""area"","
"0","                             show.legend = NA, inherit.aes = TRUE, ...) {"
"0","  layer("
"0","    data = data,"
"0","    mapping = mapping,"
"0","    stat = stat,"
"0","    geom = GeomFlatViolin,"
"0","    position = position,"
"0","    show.legend = show.legend,"
"0","    inherit.aes = inherit.aes,"
"0","    params = list("
"0","      trim = trim,"
"0","      scale = scale,"
"0","      ..."
"0","    )"
"0","  )"
"0","}"
"0","GeomFlatViolin <-"
"0","  ggproto(""GeomFlatViolin"", Geom,"
"0","          setup_data = function(data, params) {"
"0","            data$width <- data$width %||%"
"0","              params$width %||% (resolution(data$x, FALSE) * 0.9)"
"0"," "
"0"," "
"0","            # ymin, ymax, xmin, and xmax define the bounding rectangle for each group"
"0","            data %>%"
"0","              group_by(group) %>%"
"0","              mutate(ymin = min(y),"
"0","                     ymax = max(y),"
"0","                     xmin = x,"
"0","                     xmax = x + width / 2)"
"0"," "
"0"," "
"0","          },"
"0"," "
"0"," "
"0","          draw_group = function(data, panel_scales, coord) {"
"0","            # Find the points for the line to go all the way around"
"0","            data <- transform(data, xminv = x,"
"0","                              xmaxv = x + violinwidth * (xmax - x)) #利用transform函数为数据框mydata增加数据"
"0"," "
"0"," "
"0","            newdata <- rbind(plyr::arrange(transform(data, x = xmaxv), -y),plyr::arrange(transform(data, x = xminv), y))"
"0","            newdata_Polygon <- rbind(newdata, newdata[1,])"
"0","            newdata_Polygon$colour<-NA"
"0"," "
"0"," "
"0","            newdata_Path <- plyr::arrange(transform(data, x = xmaxv), -y)"
"0"," "
"0"," "
"0","            ggplot2:::ggname(""geom_flat_violin"", grobTree("
"0","              GeomPolygon$draw_panel(newdata_Polygon, panel_scales, coord),"
"0","              GeomPath$draw_panel(newdata_Path, panel_scales, coord))"
"0","            )"
"0","          },"
"0"," "
"0"," "
"0","          draw_key = draw_key_polygon,"
"0"," "
"0"," "
"0","          default_aes = aes(weight = 1, colour = ""grey20"", fill = ""white"", size = 0.5,"
"0","                            alpha = NA, linetype = ""solid""),"
"0"," "
"0"," "
"0","          required_aes = c(""x"", ""y"")"
"0","  )"
"0"," "
"0"," "
